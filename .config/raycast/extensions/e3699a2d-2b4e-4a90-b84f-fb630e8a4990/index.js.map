{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Clipboard, showToast, Toast, showHUD } from \"@raycast/api\";\n\nexport default async function Command() {\n  try {\n    // Read the current clipboard content\n    const content = await Clipboard.read();\n\n    // Ensure that there is text content to process\n    if (content.text) {\n      // Remove all HTML tags from the text content\n      let plainText = content.text.replace(/<[^>]*>?/gm, \"\").trim();\n\n      // Replace multiple newline characters with a single newline\n      plainText = plainText.replace(/[\\r\\n]+/gm, \"\\n\").trim();\n\n      // Replace the clipboard content with the stripped text\n      await Clipboard.copy(plainText);\n      await showHUD(\"Removed formatting from clipboard\");\n    } else {\n      showToast({\n        style: Toast.Style.Failure,\n        title: \"No text content found\",\n        message: \"Please copy some text or HTML content to the clipboard.\",\n      });\n    }\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : \"Unknown error encountered\";\n    showToast({\n      style: Toast.Style.Failure,\n      title: \"Error\",\n      message: message,\n    });\n  }\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAqD,wBAErD,eAAOF,GAAiC,CACtC,GAAI,CAEF,IAAMG,EAAU,MAAM,YAAU,KAAK,EAGrC,GAAIA,EAAQ,KAAM,CAEhB,IAAIC,EAAYD,EAAQ,KAAK,QAAQ,aAAc,EAAE,EAAE,KAAK,EAG5DC,EAAYA,EAAU,QAAQ,YAAa;AAAA,CAAI,EAAE,KAAK,EAGtD,MAAM,YAAU,KAAKA,CAAS,EAC9B,QAAM,WAAQ,mCAAmC,CACnD,QACE,aAAU,CACR,MAAO,QAAM,MAAM,QACnB,MAAO,wBACP,QAAS,yDACX,CAAC,CAEL,OAASC,EAAP,CACA,IAAMC,EAAUD,aAAiB,MAAQA,EAAM,QAAU,+BACzD,aAAU,CACR,MAAO,QAAM,MAAM,QACnB,MAAO,QACP,QAASC,CACX,CAAC,CACH,CACF",
  "names": ["src_exports", "__export", "Command", "__toCommonJS", "import_api", "content", "plainText", "error", "message"]
}
